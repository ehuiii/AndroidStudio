// === 1. 변수 A와 B를 선언하고, 두 변수의 값을 비교하라. ===
val A: Int = 11
val B: Int = 10
val C: Boolean = if (A == B) true else false
println(C)



// === 2. 정수형 변수 AA를 선언하고, 변수 BB는 AA의 두배가 되도록 하라. ===
val AA: Int = 10
val BB: Int = AA * 2
println(BB)



// === 3. 점수에 따른 학점을 계산하라. ===
fun checkGrade(score: Int): String {
    if (score >= 90) return "A학점"
    else if (score >= 80) return "B학점"
    else if (score >= 70) return "C학점"
    else return "F학점"
}

val result: String = checkGrade(90)
println(result)



// === 4. 시험에서 맞은 문제의 개수를 작성하면, 시험 점수 반환하도록 하라. ===
fun gradeTest(correctCount: Int): Int {
    return correctCount * 5
}

fun gradeTest2(correctCount: Int): Int = correctCount * 5
println(gradeTest(10))
println(gradeTest2(10))



// === 5. nullable 정수형 두개를 받는 함수를 만들고, 인수 합을 반환하도록 하라. ===
fun plustTwoNumbers(firstNum: Int?, secondNum: Int?): Int {
    val first: Int = if (firstNum == null) 0 else firstNum
    val second: Int = if (secondNum == null) 0 else secondNum
    return first + second
}
println(plustTwoNumbers(null, null))



// === 6. 배열 예제 ===
var array1 = arrayOf(true, "Hi", 10, 2.2, null)
println(array1) //자료형 생략했을 경우 복수개의 자료형이 배열의 인자로 올 수 있음. non-null, nullalble

var array2 = arrayOf<Int?>(1, 2, 3, 4, 5, null)
var array3 = intArrayOf(1, 2, 3, 4, 5)

val examScore1: Int = 100
val examScore2: Int = 200
var examScores = arrayOf<Int>(examScore1, examScore2)
println(examScores)



// === 7. 주어진 문자를 N번 반복하여 출력하는 함수 ===
fun repeatText(repeatText: String, repeatNumber: Int) {
    for (i in 0..repeatNumber) println(repeatText)  //3회
    for (i in 1..repeatNumber) println(repeatText)  //2회
    for (i in 0 until repeatNumber) println(repeatText) //2회
}
repeatText("안녕", 2)



// === 8. 1부터 주어진 숫자까지의 합 구하는 함수 ===
fun sumUntil(givenNumber: Int): Int {
    var sum: Int = 0
    for (i in 1..givenNumber) sum += i
    return sum
}
sumUntil(10)    //55



// === 9. 1부터 100까지의 수 중에서 7의 배수의 합을 구하는 함수 ===
fun sum7s(): Int {
    var sum: Int = 0
    for (i in 0..100) {
        if (i % 7 == 0) sum += i
    }
    return sum
}
sum7s()         //735



// === 10. 100보다 작은 숫자를 넣어주면, 1씩 증가시키고 100이 되면 종료되는 함수
fun increaseOne(numberUnder100: Int) {
    var givenNumber: Int = numberUnder100
    while (givenNumber < 100) { //100 이하면 증가시킨 후 up 출력
        givenNumber++
        println("up")
    }
    return
}
increaseOne(99)


